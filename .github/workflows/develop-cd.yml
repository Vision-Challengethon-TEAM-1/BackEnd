name: develop-cd

on:
  push:
    branches: [ 'main' ]

permissions:
  contents: read
  id-token: 'write'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SPRING_PORT: ${{ secrets.SPRING_PORT }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
      OAUTH2_REDIRECT_URI: ${{ secrets.OAUTH2_REDIRECT_URI }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Add .env
        run: |
          touch .env
          echo "${{ secrets.ENV }}" > .env

        shell: bash

      - name: Build with Gradle and Process Docker
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          ./deploy.sh

      - name: Google auth
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          project_id: '${{ secrets.PROJECT_ID }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: '${{ secrets.PROJECT_ID }}'

      - name: 'Pull images and run docker-compose'
        run: |-
          docker compose -f docker-compose.yml down --rmi all
          docker pull ${{ secrets.DOCKER_USERNAME }}/cheollian:latest
          docker compose -f docker-compose.yml up -d
